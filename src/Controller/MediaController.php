<?php

namespace App\Controller;

use App\Entity\Media;
use App\Form\AvatarType;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\File\Exception\FileException;

/**
 * @Route("/avatar")
 */
class MediaController extends AbstractController
{
    /**
     * @Route("/new", name="media_new", methods={"GET","POST"})
     * @param Request $request
     * @return Response
     */
    public function new(Request $request): Response
    {
        $media = new Media();
        $form = $this->createForm(AvatarType::class, $media);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            // $file stores the uploaded JPG file

            $file = $form->get('type')->getData();
            $extensionFile = ['jpeg', 'jpg', 'png'];

            if (in_array($file->guessExtension(), $extensionFile)) {
                $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();


                // Move the file to the directory where avatars are stored
                try {
                    $file->move(
                        $this->getParameter('avatars_directory'),
                        $fileName
                    );
                } catch (FileException $e) {
                    // ... handle exception if something happens during file upload
                }

                // updates the 'media' property to store the JPG file name
                // instead of its contents
                $media->setType($fileName);


                // ... persist the $media variable or any other work

                return $this->redirect($this->generateUrl('user_index'));
            } else {
                $this->redirect($this->generateUrl('user_edit'));
            }
        }
        return $this->render('media/new.html.twig', [
            'form' => $form->createView(),
        ]);
    }

        /**
         * @return string
         */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}
